(begin
 (define def-macro
   (macro (name args body)
          `(define ,name (macro ,args ,body))))

 (define map (lambda (f l)
               (if (nil? l)
                   nil
                 (join
                  (list (call f (car l)))
                  (map f (cdr l))))))

 (define filter (lambda (f l)
                  (if (nil? l)
                      nil
                    (join (if (call f (car l))
                              (list (car l))
                            nil)

                          (filter f (cdr l))))))

 (define inc (lambda (x) (+ 1 x)))

 (define x '(() 1))
 (nil? (car x))
)
